name: Deploy Compute Node

on:
  push:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install Ansible and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible sshpass jq

    - name: Clean up duplicate Terraform files
      run: |
        cd terraform
        if [ -f provider.tf ]; then
          rm -f provider.tf
        fi

    - name: Generate SSH key pair
      run: |
        mkdir -p /tmp/.ssh
        ssh-keygen -t rsa -b 4096 -f /tmp/ssh_key -N "" -C "github-actions-cluster"
        echo "=== Public Key ==="
        cat /tmp/ssh_key.pub

    - name: Create terraform.tfvars from secrets
      run: |
        echo 'do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"' > terraform/terraform.tfvars
        echo 'region = "lon1"' >> terraform/terraform.tfvars
        echo 'cluster_name = "student-cluster"' >> terraform/terraform.tfvars
        echo 'com2_size = "s-2vcpu-4gb"' >> terraform/terraform.tfvars
        echo 'image = "rockylinux-9-x64"' >> terraform/terraform.tfvars
        echo 'private_key_path = "/tmp/ssh_key"' >> terraform/terraform.tfvars
        echo 'tags = ["github-actions", "hpc-cluster", "automated"]' >> terraform/terraform.tfvars
        echo 'existing_droplet_names = ["head", "com1"]' >> terraform/terraform.tfvars

    - name: Setup SSH key for Terraform
      run: |
        cp /tmp/ssh_key.pub terraform/ssh_key.pub
        chmod 600 /tmp/ssh_key

    - name: Terraform Init and Apply
      run: |
        cd terraform
        terraform init
        terraform plan
        timeout 180s terraform apply -auto-approve

    - name: Wait for com2 to be ready
      run: |
        sleep 30

    - name: Extract IP addresses
      run: |
        cd terraform
        terraform output -raw head_ip > ../ansible/head_ip.txt 2>/dev/null || echo "157.245.35.46" > ../ansible/head_ip.txt
        terraform output -raw com1_ip > ../ansible/com1_ip.txt 2>/dev/null || echo "143.110.163.13" > ../ansible/com1_ip.txt
        terraform output -raw com2_ip > ../ansible/com2_ip.txt 2>/dev/null || echo "159.65.17.107" > ../ansible/com2_ip.txt
        
        echo "Head IP: $(cat ../ansible/head_ip.txt)"
        echo "Com1 IP: $(cat ../ansible/com1_ip.txt)"
        echo "Com2 IP: $(cat ../ansible/com2_ip.txt)"

    - name: Configure com2 node manually via SSH
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        echo "Configuring com2 node at $CO2_IP"
        
        # SSH into com2 and run configuration commands
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP << 'SSH_COMMANDS'
          # Create clusteradmin user
          useradd -m -s /bin/bash clusteradmin
          echo "clusteradmin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/clusteradmin
          chmod 440 /etc/sudoers.d/clusteradmin
          
          # Create .ssh directory and add authorized key
          mkdir -p /home/clusteradmin/.ssh
          echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBWXU12cxnyWt+hhOJJfrk+YwsEYFTt5uNFqjUzsUKy2 clusteradmin@head" >> /home/clusteradmin/.ssh/authorized_keys
          chmod 700 /home/clusteradmin/.ssh
          chmod 600 /home/clusteradmin/.ssh/authorized_keys
          chown -R clusteradmin:clusteradmin /home/clusteradmin/.ssh
          
          # Install NFS client
          dnf install -y nfs-utils
          
          # Create mount point
          mkdir -p /home/clusteradmin/shared
          chown clusteradmin:clusteradmin /home/clusteradmin/shared
          
          # Add to fstab for permanent mount (using head node IP)
          echo "157.245.35.46:/home/clusteradmin/shared /home/clusteradmin/shared nfs defaults 0 0" >> /etc/fstab
          
          # Mount immediately
          mount /home/clusteradmin/shared
          
          # Verify setup
          echo "=== User created ==="
          id clusteradmin
          echo "=== SSH key added ==="
          cat /home/clusteradmin/.ssh/authorized_keys
          echo "=== NFS mount ==="
          df -h | grep shared || echo "NFS not mounted yet, may need to be mounted on head node first"
SSH_COMMANDS

    - name: Verify com2 configuration
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        echo "Verifying configuration on com2 node at $CO2_IP"
        
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP << 'VERIFY_COMMANDS'
          echo "=== Users ==="
          getent passwd clusteradmin
          echo "=== SSH directory ==="
          ls -la /home/clusteradmin/.ssh/
          echo "=== NFS mount ==="
          mount | grep shared || echo "NFS not mounted"
          echo "=== Sudo access ==="
          sudo -U clusteradmin -l
VERIFY_COMMANDS

    - name: Display completion message
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        echo "=========================================="
        echo "âœ… DEPLOYMENT COMPLETE"
        echo "=========================================="
        echo "com2 node: $CO2_IP"
        echo "User: clusteradmin"
        echo "SSH Key: Added from head node"
        echo "NFS: Configured (may need manual mount on head)"
        echo ""
        echo "To connect: ssh clusteradmin@$CO2_IP"
        echo "=========================================="
