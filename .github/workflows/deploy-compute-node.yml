name: Deploy Compute Node

on:
  push:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install Ansible and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible sshpass

    - name: Create terraform.tfvars from secrets
      run: |
        echo 'do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"' > terraform/terraform.tfvars
        echo 'region = "lon1"' >> terraform/terraform.tfvars
        echo 'cluster_name = "student-cluster"' >> terraform/terraform.tfvars
        echo 'com2_size = "s-2vcpu-4gb"' >> terraform/terraform.tfvars
        echo 'image = "rockylinux-9-x64"' >> terraform/terraform.tfvars
        echo 'private_key_path = "/tmp/ssh_key"' >> terraform/terraform.tfvars
        echo 'tags = ["github-actions", "hpc-cluster", "automated"]' >> terraform/terraform.tfvars

    - name: Setup SSH key for Ansible
      run: |
        mkdir -p /tmp/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform

    - name: Wait for SSH to be ready
      run: |
        sleep 30  # Wait for droplets to be fully provisioned

    - name: Generate dynamic inventory from Terraform
      run: |
        cd terraform
        terraform output -raw com1_ip > ../ansible/com1_ip.txt
        terraform output -raw com2_ip > ../ansible/com2_ip.txt
        terraform output -raw head_ip > ../ansible/head_ip.txt

    - name: Create dynamic inventory for Ansible
      run: |
        cat > ansible/inventory.ini << 'EOT'
[head]
$(cat ansible/head_ip.txt)

[com1]
$(cat ansible/com1_ip.txt)

[com2]
$(cat ansible/com2_ip.txt)

[compute_nodes]
$(cat ansible/com1_ip.txt)
$(cat ansible/com2_ip.txt)

[all:vars]
ansible_user=root
ansible_ssh_private_key_file=/tmp/ssh_key
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
EOT

    - name: Display inventory
      run: cat ansible/inventory.ini

    - name: Run initial node setup playbook
      run: |
        cd ansible
        ansible-playbook -i inventory.ini playbook-com2.yml

    - name: Run NFS fix playbook
      run: |
        cd ansible
        ansible-playbook -i inventory.ini fix-nfs-mount.yml

    - name: Run final fixes playbook
      run: |
        cd ansible
        ansible-playbook -i inventory.ini fix-final.yml

    - name: Run CI verification
      run: |
        cd ansible
        chmod +x ci-verification.sh
        ./ci-verification.sh
