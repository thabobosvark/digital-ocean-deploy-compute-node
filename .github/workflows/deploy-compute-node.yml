name: Deploy Compute Node

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy infrastructure'
        required: false
        default: 'false'
        type: boolean

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04
    if: github.event.inputs.destroy != 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install Ansible and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible sshpass

    - name: Create terraform.tfvars from secrets
      run: |
        cat > terraform/terraform.tfvars << 'TFVARS'
do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"
region = "lon1"
cluster_name = "student-cluster"
com2_size = "s-2vcpu-4gb"
image = "rockylinux-9-x64"
private_key_path = "/tmp/ssh_key"
tags = ["github-actions", "hpc-cluster", "automated"]
TFVARS

    - name: Setup SSH key for Ansible
      run: |
        mkdir -p /tmp/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform

  destroy:
    runs-on: ubuntu-22.04
    if: github.event.inputs.destroy == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Create terraform.tfvars from secrets
      run: |
        cat > terraform/terraform.tfvars << 'TFVARS'
do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"
region = "lon1"
cluster_name = "student-cluster"
com2_size = "s-2vcpu-4gb"
image = "rockylinux-9-x64"
private_key_path = "/tmp/ssh_key"
tags = ["github-actions", "hpc-cluster", "automated"]
TFVARS

    - name: Setup SSH key for Ansible
      run: |
        mkdir -p /tmp/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform
