name: Deploy Compute Node

on:
  push:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    - name: Clean up duplicate Terraform files
      run: |
        cd terraform
        if [ -f provider.tf ]; then
          rm -f provider.tf
        fi

    - name: Generate SSH key pair
      run: |
        mkdir -p /tmp/.ssh
        ssh-keygen -t rsa -b 4096 -f /tmp/ssh_key -N "" -C "github-actions-cluster"
        echo "=== Public Key ==="
        cat /tmp/ssh_key.pub

    - name: Create terraform.tfvars from secrets
      run: |
        echo 'do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"' > terraform/terraform.tfvars
        echo 'region = "lon1"' >> terraform/terraform.tfvars
        echo 'cluster_name = "student-cluster"' >> terraform/terraform.tfvars
        echo 'com2_size = "s-2vcpu-4gb"' >> terraform/terraform.tfvars
        echo 'image = "rockylinux-9-x64"' >> terraform/terraform.tfvars
        echo 'private_key_path = "/tmp/ssh_key"' >> terraform/terraform.tfvars
        echo 'tags = ["github-actions", "hpc-cluster", "automated"]' >> terraform/terraform.tfvars
        echo 'existing_droplet_names = ["head", "com1"]' >> terraform/terraform.tfvars

    - name: Setup SSH key for Terraform
      run: |
        cp /tmp/ssh_key.pub terraform/ssh_key.pub
        chmod 600 /tmp/ssh_key

    - name: Terraform Init and Apply
      run: |
        cd terraform
        terraform init
        terraform plan
        timeout 180s terraform apply -auto-approve

    - name: Wait for com2 to be ready
      run: |
        sleep 30

    - name: Get com2 IP from Terraform state
      run: |
        cd terraform
        # Get the actual IP from Terraform state
        terraform show -json > tfstate.json
        COM2_IP=$(python3 -c "import json; f=open('tfstate.json'); data=json.load(f); print([r['values']['ipv4_address'] for r in data['values']['root_module']['resources'] if r['name']=='com2'][0])")
        echo "COM2_IP=$COM2_IP" >> $GITHUB_ENV
        echo "Com2 IP: $COM2_IP"

    - name: Create clusteradmin user on com2
      run: |
        echo "Creating clusteradmin user on com2 at $COM2_IP"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "useradd -m -s /bin/bash clusteradmin"

    - name: Setup sudo access for clusteradmin
      run: |
        echo "Setting up sudo access for clusteradmin on $COM2_IP"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "echo 'clusteradmin ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/clusteradmin"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "chmod 440 /etc/sudoers.d/clusteradmin"

    - name: Add SSH key to clusteradmin
      run: |
        echo "Adding SSH key to clusteradmin on $COM2_IP"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "mkdir -p /home/clusteradmin/.ssh"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBWXU12cxnyWt+hhOJJfrk+YwsEYFTt5uNFqjUzsUKy2 clusteradmin@head' > /home/clusteradmin/.ssh/authorized_keys"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "chmod 700 /home/clusteradmin/.ssh"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "chmod 600 /home/clusteradmin/.ssh/authorized_keys"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "chown -R clusteradmin:clusteradmin /home/clusteradmin/.ssh"

    - name: Install NFS and mount home directory
      run: |
        echo "Setting up NFS on com2 at $COM2_IP"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "dnf install -y nfs-utils"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "mkdir -p /home/clusteradmin"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "mount -t nfs 10.106.0.5:/home /home"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "echo '10.106.0.5:/home /home nfs defaults 0 0' >> /etc/fstab"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "setsebool -P use_nfs_home_dirs 1"

    - name: Verify setup
      run: |
        echo "Verifying setup on com2 at $COM2_IP"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "getent passwd clusteradmin && echo '✓ User created'"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "mount | grep nfs && echo '✓ NFS mounted'"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$COM2_IP "sudo -U clusteradmin -l && echo '✓ Sudo access working'"

    - name: Display completion message
      run: |
        echo "=========================================="
        echo "✅ DEPLOYMENT COMPLETE"
        echo "=========================================="
        echo "com2 node: $COM2_IP"
        echo "User: clusteradmin"
        echo "NFS: Mounted /home from head node (10.106.0.5)"
        echo ""
        echo "To connect: ssh clusteradmin@$COM2_IP"
        echo "=========================================="
