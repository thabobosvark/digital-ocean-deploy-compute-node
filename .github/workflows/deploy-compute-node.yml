name: Deploy Compute Node

on:
  push:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install Ansible and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible sshpass jq

    - name: Generate SSH key pair
      run: |
        mkdir -p /tmp/.ssh
        ssh-keygen -t rsa -b 4096 -f /tmp/ssh_key -N "" -C "github-actions-cluster"
        echo "=== Public Key ==="
        cat /tmp/ssh_key.pub

    - name: Create terraform.tfvars from secrets
      run: |
        echo 'do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"' > terraform/terraform.tfvars
        echo 'region = "lon1"' >> terraform/terraform.tfvars
        echo 'cluster_name = "student-cluster"' >> terraform/terraform.tfvars
        echo 'com2_size = "s-2vcpu-4gb"' >> terraform/terraform.tfvars
        echo 'image = "rockylinux-9-x64"' >> terraform/terraform.tfvars
        echo 'private_key_path = "/tmp/ssh_key"' >> terraform/terraform.tfvars
        echo 'tags = ["github-actions", "hpc-cluster", "automated"]' >> terraform/terraform.tfvars

    - name: Setup SSH key for Terraform
      run: |
        cp /tmp/ssh_key.pub terraform/ssh_key.pub
        chmod 600 /tmp/ssh_key

    - name: Terraform Init and Apply
      run: |
        cd terraform
        echo "=== Terraform Files ==="
        ls -la *.tf
        echo "=== Initializing Terraform ==="
        terraform init
        echo "=== Planning ==="
        terraform plan
        echo "=== Applying ==="
        terraform apply -auto-approve

    - name: Extract IP addresses
      run: |
        cd terraform
        echo "=== Extracting IPs ==="
        terraform output -raw head_ip > ../ansible/head_ip.txt
        terraform output -raw com1_ip > ../ansible/com1_ip.txt
        terraform output -raw com2_ip > ../ansible/com2_ip.txt
        
        echo "Head IP: $(cat ../ansible/head_ip.txt)"
        echo "Com1 IP: $(cat ../ansible/com1_ip.txt)"
        echo "Com2 IP: $(cat ../ansible/com2_ip.txt)"

    - name: Create inventory
      run: |
        echo "[head]" > ansible/inventory.ini
        cat ansible/head_ip.txt >> ansible/inventory.ini
        echo "" >> ansible/inventory.ini
        echo "[compute_nodes]" >> ansible/inventory.ini
        cat ansible/com1_ip.txt >> ansible/inventory.ini
        cat ansible/com2_ip.txt >> ansible/inventory.ini
        echo "" >> ansible/inventory.ini
        echo "[all:vars]" >> ansible/inventory.ini
        echo "ansible_user=root" >> ansible/inventory.ini
        echo "ansible_ssh_private_key_file=/tmp/ssh_key" >> ansible/inventory.ini
        echo "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini

    - name: Run Ansible playbooks
      run: |
        cd ansible
        ansible-playbook -i inventory.ini playbook-com2.yml
        ansible-playbook -i inventory.ini fix-nfs-mount.yml
        ansible-playbook -i inventory.ini fix-final.yml
        chmod +x ci-verification.sh
        ./ci-verification.sh
