name: Deploy Compute Node

on:
  push:
    branches: [ main ]

env:
  TERRAFORM_VERSION: 1.5.7

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Install Ansible and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible sshpass jq

    - name: Clean up duplicate Terraform files
      run: |
        cd terraform
        if [ -f provider.tf ]; then
          rm -f provider.tf
        fi

    - name: Generate SSH key pair
      run: |
        mkdir -p /tmp/.ssh
        ssh-keygen -t rsa -b 4096 -f /tmp/ssh_key -N "" -C "github-actions-cluster"
        echo "=== Public Key ==="
        cat /tmp/ssh_key.pub

    - name: Create terraform.tfvars from secrets
      run: |
        echo 'do_token = "${{ secrets.DIGITALOCEAN_TOKEN }}"' > terraform/terraform.tfvars
        echo 'region = "lon1"' >> terraform/terraform.tfvars
        echo 'cluster_name = "student-cluster"' >> terraform/terraform.tfvars
        echo 'com2_size = "s-2vcpu-4gb"' >> terraform/terraform.tfvars
        echo 'image = "rockylinux-9-x64"' >> terraform/terraform.tfvars
        echo 'private_key_path = "/tmp/ssh_key"' >> terraform/terraform.tfvars
        echo 'tags = ["github-actions", "hpc-cluster", "automated"]' >> terraform/terraform.tfvars
        echo 'existing_droplet_names = ["head", "com1"]' >> terraform/terraform.tfvars

    - name: Setup SSH key for Terraform
      run: |
        cp /tmp/ssh_key.pub terraform/ssh_key.pub
        chmod 600 /tmp/ssh_key

    - name: Terraform Init and Apply
      run: |
        cd terraform
        terraform init
        terraform plan
        timeout 180s terraform apply -auto-approve

    - name: Wait for com2 to be ready
      run: |
        sleep 30

    - name: Extract IP addresses
      run: |
        cd terraform
        terraform output -raw head_ip > ../ansible/head_ip.txt 2>/dev/null || echo "157.245.35.46" > ../ansible/head_ip.txt
        terraform output -raw com1_ip > ../ansible/com1_ip.txt 2>/dev/null || echo "143.110.163.13" > ../ansible/com1_ip.txt
        terraform output -raw com2_ip > ../ansible/com2_ip.txt 2>/dev/null || echo "159.65.17.107" > ../ansible/com2_ip.txt
        
        echo "Head IP: $(cat ../ansible/head_ip.txt)"
        echo "Com1 IP: $(cat ../ansible/com1_ip.txt)"
        echo "Com2 IP: $(cat ../ansible/com2_ip.txt)"

    - name: Create configuration script for com2
      run: |
        cat > configure_com2.sh << 'SCRIPT'
#!/bin/bash
set -e

CO2_IP=$1

echo "Configuring com2 node at $CO2_IP"

# Create clusteradmin user
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "useradd -m -s /bin/bash clusteradmin"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "echo 'clusteradmin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/clusteradmin"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "chmod 440 /etc/sudoers.d/clusteradmin"

# Create .ssh directory and add authorized key
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "mkdir -p /home/clusteradmin/.ssh"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBWXU12cxnyWt+hhOJJfrk+YwsEYFTt5uNFqjUzsUKy2 clusteradmin@head' >> /home/clusteradmin/.ssh/authorized_keys"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "chmod 700 /home/clusteradmin/.ssh"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "chmod 600 /home/clusteradmin/.ssh/authorized_keys"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "chown -R clusteradmin:clusteradmin /home/clusteradmin/.ssh"

# Install NFS client
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "dnf install -y nfs-utils"

# Create mount point
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "mkdir -p /home/clusteradmin/shared"
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "chown clusteradmin:clusteradmin /home/clusteradmin/shared"

# Add to fstab for permanent mount
ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "echo '157.245.35.46:/home/clusteradmin/shared /home/clusteradmin/shared nfs defaults 0 0' >> /etc/fstab"

echo "Configuration completed for com2 node"
SCRIPT

        chmod +x configure_com2.sh

    - name: Configure com2 node using script
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        ./configure_com2.sh $CO2_IP

    - name: Verify com2 configuration
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        echo "Verifying configuration on com2 node at $CO2_IP"
        
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "getent passwd clusteradmin && echo '=== User created successfully ==='"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "ls -la /home/clusteradmin/.ssh/ && echo '=== SSH directory created ==='"
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@$CO2_IP "sudo -U clusteradmin -l && echo '=== Sudo access verified ==='"

    - name: Display completion message
      run: |
        CO2_IP=$(cat ansible/com2_ip.txt)
        echo "=========================================="
        echo "âœ… DEPLOYMENT COMPLETE"
        echo "=========================================="
        echo "com2 node: $CO2_IP"
        echo "User: clusteradmin"
        echo "SSH Key: Added from head node"
        echo "NFS: Configured (mount with: mount /home/clusteradmin/shared)"
        echo ""
        echo "To connect: ssh clusteradmin@$CO2_IP"
        echo "=========================================="
